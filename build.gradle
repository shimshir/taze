plugins {
    id 'org.springframework.boot' version '1.4.3.RELEASE'
    id 'application'
    id 'scala'
}

group 'de.admir.goverdrive'
version '0.0.1-SNAPSHOT'
description 'Taze products web shop'

project.mainClassName = 'de.admir.taze.Application'

repositories {
    jcenter()
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail'
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'com.h2database', name: 'h2', version: '1.4.192'
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1211.jre7'
    compile group: 'com.spencerwi', name: 'Either.java', version: '1.1.0'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.23'
    compile group: 'com.cloudinary', name: 'cloudinary-http44', version: '1.4.6'

    compile group: 'org.scala-lang', name: 'scala-library', version: '2.12.1'

    compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '4.8'
    compile group: 'org.logback-extensions', name: 'logback-ext-loggly', version: '0.1.2'
    compile group: 'org.codehaus.janino', name: 'janino', version: '3.0.6'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.12'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
}

bootRun {
    systemProperties System.getProperties()
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

task stage(type: Copy, dependsOn: [clean, bootRepackage]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }
}

stage.mustRunAfter(clean)

stage.doLast {
    new File("${project.buildDir}").deleteDir()
}

clean.doLast {
    def appJar = project.file('app.jar')
    if (appJar.exists() && !appJar.delete())
        throw new GradleException('Could not delete app.jar')
}
